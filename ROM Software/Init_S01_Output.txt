------+------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File      Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1 Init.s      1 | Comment     | 11 |         |    0 | 00/8000               | *-------------------------------------------------------------------------------
    2 |  1 Init.s      2 | Comment     | 11 |         |    0 | 00/8000               | *--
    3 |  1 Init.s      3 | Comment     | 11 |         |    0 | 00/8000               | *--   Initialization Routines
    4 |  1 Init.s      4 | Comment     | 11 |         |    0 | 00/8000               | *--   Immediately called at startup, will:
    5 |  1 Init.s      5 | Comment     | 11 |         |    0 | 00/8000               | *--												1. Initialize stack
    6 |  1 Init.s      6 | Comment     | 11 |         |    0 | 00/8000               | *--												2. Display Startup Message
    7 |  1 Init.s      7 | Comment     | 11 |         |    0 | 00/8000               | *--                       3. Jump to Cold or Warm Start based on user input
    8 |  1 Init.s      8 | Comment     | 11 |         |    0 | 00/8000               | *-------------------------------------------------------------------------------
    9 |  1 Init.s      9 | Empty       | 11 |         |    0 | 00/8000               |                                       
   10 |  1 Init.s     10 | Empty       | 11 |         |    0 | 00/8000               |                                       
   11 |  1 Init.s     11 | Directive   | 11 |         |    0 | 00/8000               |                 DSK   Init            
   12 |  1 Init.s     12 | Directive   | 11 |         |    0 | 00/8000               |                 ORG   $FE00           
   13 |  1 Init.s     13 | Directive   | 11 |         |    0 | 00/FE00               |                 TYP   $06             
   14 |  1 Init.s     14 | Empty       | 11 |         |    0 | 00/FE00               |                                       
   15 |  1 Init.s     15 | Comment     | 11 |         |    0 | 00/FE00               | *-------------------------------------------------------------------------------
   16 |  1 Init.s     16 | Comment     | 11 |         |    0 | 00/FE00               | *-- External routine definition
   17 |  1 Init.s     17 | Comment     | 11 |         |    0 | 00/FE00               | *-------------------------------------------------------------------------------
   18 |  1 Init.s     18 | Empty       | 11 |         |    0 | 00/FE00               |                                       
   19 |  1 Init.s     19 | External    | 11 |         |    0 | 00/FE00               | BIOSCHOUT       EXT                   
   20 |  1 Init.s     20 | External    | 11 |         |    0 | 00/FE00               | BIOSCHGET       EXT                   
   21 |  1 Init.s     21 | External    | 11 |         |    0 | 00/FE00               | BIOSCFGACIA     EXT                   
   22 |  1 Init.s     22 | External    | 11 |         |    0 | 00/FE00               | BIOSCHISCTRLC   EXT                   
   23 |  1 Init.s     23 | Empty       | 11 |         |    0 | 00/FE00               |                                       
   24 |  1 Init.s     24 | Empty       | 11 |         |    0 | 00/FE00               |                                       
   25 |  1 Init.s     25 | Equivalence | 11 |         |    0 | 00/FE00               | COLDSTART       EQU   $C000           ; Let s see later the Monitor
   26 |  1 Init.s     26 | Equivalence | 11 |         |    0 | 00/FE00               | RESTART         EQU   $C000           ; And Basic Entry points
   27 |  1 Init.s     27 | Equivalence | 11 |         |    0 | 00/FE00               | STACKTOP        EQU   #$F8            ; Like a good old Apple //
   28 |  1 Init.s     28 | Empty       | 11 |         |    0 | 00/FE00               |                                       
   29 |  1 Init.s     29 | Comment     | 11 |         |    0 | 00/FE00               | *-------------------------------------------------------------------------------
   30 |  1 Init.s     30 | Comment     | 11 |         |    0 | 00/FE00               | *-- Entry point : Reset Vector
   31 |  1 Init.s     31 | Comment     | 11 |         |    0 | 00/FE00               | *-------------------------------------------------------------------------------
   32 |  1 Init.s     32 | Empty       | 11 |         |    0 | 00/FE00               |                                       
   33 |  1 Init.s     33 | Global      | 11 |         |    0 | 00/FE00               | RESET           ENT                   ; Declare Global
   34 |  1 Init.s     34 | Code        | 11 |         |    2 | 00/FE00 : A2 F8       |                 LDX   {#$F8}          ; Load X with new top of stack value
   35 |  1 Init.s     35 | Code        | 11 |         |    1 | 00/FE02 : 9A          |                 TXS                   ; Set the stack pointer
   36 |  1 Init.s     36 | Empty       | 11 |         |    0 | 00/FE03               |                                       
   37 |  1 Init.s     37 | Code        | 11 |E 2      |    3 | 00/FE03 : 20 00 FF    |                 JSR   BIOSCFGACIA     ; Configure ACIA
   38 |  1 Init.s     38 | Empty       | 11 |         |    0 | 00/FE06               |                                       
   39 |  1 Init.s     39 | Code        | 11 |         |    2 | 00/FE06 : A0 00       |                 LDY   #0              ; Initialize counter
   40 |  1 Init.s     40 | Code        | 11 |         |    3 | 00/FE08 : B9 28 FE    | ozunid_1        LDA   STARTUPMESSAGE,Y; Get character at counter
   41 |  1 Init.s     41 | Code        | 11 |         |    2 | 00/FE0B : F0 06       |                 BEQ   USERINPUT       ; If we're done go get user choice
   42 |  1 Init.s     42 | Code        | 11 |E 2      |    3 | 00/FE0D : 20 08 FF    |                 JSR   BIOSCHOUT       ; else display the character
   43 |  1 Init.s     43 | Code        | 11 |         |    1 | 00/FE10 : C8          |                 INY                   ; Move to next character
   44 |  1 Init.s     44 | Code        | 11 |         |    2 | 00/FE11 : D0 F5       |                 BNE   ozunid_1        
   45 |  1 Init.s     45 | Empty       | 11 |         |    0 | 00/FE13               |                                       
   46 |  1 Init.s     46 | Comment     | 11 |         |    0 | 00/FE13               | *-------------------------------------------------------------------------------
   47 |  1 Init.s     47 | Comment     | 11 |         |    0 | 00/FE13               | *-- Get and procrss user choice
   48 |  1 Init.s     48 | Comment     | 11 |         |    0 | 00/FE13               | *-------------------------------------------------------------------------------
   49 |  1 Init.s     49 | Empty       | 11 |         |    0 | 00/FE13               |                                       
   50 |  1 Init.s     50 | Code        | 11 |E 2      |    3 | 00/FE13 : 20 17 FF    | USERINPUT       JSR   BIOSCHGET       ; Read user input
   51 |  1 Init.s     51 | Code        | 11 |         |    2 | 00/FE16 : 90 FB       |                 BCC   USERINPUT       ; Retry until we get something
   52 |  1 Init.s     52 | Code        | 11 |         |    2 | 00/FE18 : 29 DF       |                 AND   #$DF            ; Convert to UPPER case
   53 |  1 Init.s     53 | Code        | 11 |         |    2 | 00/FE1A : C9 57       |                 CMP   #'W'            ; Warm Start ?
   54 |  1 Init.s     54 | Code        | 11 |         |    2 | 00/FE1C : F0 07       |                 BEQ   WARMSTART       ; Let's go for WARM STAFT
   55 |  1 Init.s     55 | Code        | 11 |         |    2 | 00/FE1E : C9 43       |                 CMP   #'C'            ; Cold Start ?
   56 |  1 Init.s     56 | Code        | 11 |         |    2 | 00/FE20 : D0 DE       |                 BNE   RESET           ; Something else ? Restart all...
   57 |  1 Init.s     57 | Code        | 11 |         |    3 | 00/FE22 : 4C 00 C0    |                 JMP   {$C000}         ; Let's go !
   58 |  1 Init.s     58 | Code        | 11 |         |    3 | 00/FE25 : 4C 00 C0    | WARMSTART       JMP   {$C000}         ; Let's go...Warmer
   59 |  1 Init.s     59 | Empty       | 11 |         |    0 | 00/FE28               |                                       
   60 |  1 Init.s     60 | Data        | 11 |         |   46 | 00/FE28 : 0C 4F 4A 27 | STARTUPMESSAGE  ASC   0C,'OJ',27,'s SBC V0.1',0D,0A,'Cold [C] or warm [W] start?',0D,0A,00
      |                  |             |    |         |      |           73 20 53 42 |
      |                  |             |    |         |      |           43 20 56 30 |
      |                  |             |    |         |      |           2E 31 0D 0A |
      |                  |             |    |         |      |           43 6F 6C 64 |
      |                  |             |    |         |      |           20 5B 43 5D |
      |                  |             |    |         |      |           20 6F 72 20 |
      |                  |             |    |         |      |           77 61 72 6D |
      |                  |             |    |         |      |           20 5B 57 5D |
      |                  |             |    |         |      |           20 73 74 61 |
      |                  |             |    |         |      |           72 74 3F 0D |
      |                  |             |    |         |      |           0A 00       |
   61 |  1 Init.s     61 | Empty       | 11 |         |    0 | 00/FE56               |                                       
------+------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
